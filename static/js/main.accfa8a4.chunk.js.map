{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","ispneding","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","intialStateSearch","initialStateRobots","ispending","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.accfa8a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../containers/Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const { name, email, id } = props;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"cardItem\">\r\n        <img\r\n          alt=\"robots\"\r\n          src={`https://robohash.org/${id}?size=200x200`}\r\n          className=\"material-icons\"\r\n        />\r\n        <div className=\"cardLabel\">{name}</div>\r\n        <div className=\"cardEmail\">{email}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"../containers/Card.css\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"search-box\">\r\n      <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        /*border: \"1px solid black\",*/\r\n        height: \"80vh\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops!. That is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport { setSearchField, requestRobots } from \"../actions\";\r\n//import { requestRobots } from \"../reducers\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    ispneding: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots()),\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return isPending ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div>\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants.js\";\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text,\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch((error) =>\r\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\r\n    );\r\n};\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants.js\";\r\n\r\nconst intialStateSearch = {\r\n  searchField: \"\",\r\n};\r\n\r\nexport const searchRobots = (state = intialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRobots = {\r\n  ispending: false,\r\n  robots: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return { ...state, ispending: true };\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return { ...state, robots: action.payload, ispending: false };\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return { ...state, error: action.payload, ispending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport { searchRobots, requestRobots } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}